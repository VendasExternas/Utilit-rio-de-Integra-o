group = 'br.com.alkord'
version = '1.0'

apply plugin: "java"
apply plugin: "idea"
apply plugin: 'maven-publish'
apply plugin: 'com.github.johnrengelman.shadow'

sourceCompatibility = 1.8

shadowJar {
    baseName = 'utilitarioIntegracao'
    version = "$project.version"
    classifier = null
}

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url = "s3://repository.alkord.com.br/releases"
        credentials(AwsCredentials) {
            accessKey "${System.getenv('AWS_ACCESS_KEY_ID')}"
            secretKey "${System.getenv('AWS_SECRET_ACCESS_KEY')}"
        }
    }
    maven {
        url = "s3://repository.alkord.com.br/third-party"
        credentials(AwsCredentials) {
            accessKey "${System.getenv('AWS_ACCESS_KEY_ID')}"
            secretKey "${System.getenv('AWS_SECRET_ACCESS_KEY')}"
        }
    }
}

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.1'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.7'
}

ext {
    generatedSourcesDir = file("${buildDir}/classes/main/generated")
    generatedTestSourcesDir = file("${buildDir}/classes/test/generated")
    awsBuild = file("${buildDir}/aws")
}

idea {
    project {
        languageLevel = '1.8'
        ipr.withXml { provider ->
            def projectXml = provider.asNode()

            def compilerConfiguration = projectXml.component.find { component ->
                component.'@name' == 'CompilerConfiguration'
            }

            def currentAnnotationProcessing = compilerConfiguration.annotationProcessing
            currentAnnotationProcessing.replaceNode {
                annotationProcessing {
                    profile(name: 'Default', default: true, enabled: true) {
                        processorPath(useClasspath: true)
                    }
                }
            }
        }
    }
    module.sourceDirs += generatedSourcesDir
    module.testSourceDirs += generatedTestSourcesDir
}

sourceSets {
    main {
        java {
            exclude '**/annotations/**'
            exclude '**/processors/**'
            exclude '**/test/**'
        }
    }

    servlet {
        compileClasspath += sourceSets.main.runtimeClasspath
    }

    test {
        java {
            exclude '**/annotations/**'
            exclude '**/processors/**'
        }
    }

    annotationProcessors
}

task awsBuild(type: Copy) {
    from compileJava
    from processResources
    from('.') {
        include '*.yml'
    }
    from(configurations.runtime) {
        exclude("**/br/**")
        into("lib")
    }
    into(awsBuild)
    exclude("generated")
}

tasks.withType(JavaCompile).getByName("compileJava") {
    doFirst {
        generatedSourcesDir.mkdirs()
    }

    options.encoding = 'UTF-8'
    options.fork = true
    options.forkOptions.executable = 'javac'
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation" << "-XDignore.symbol.file"
    options.compilerArgs += ['-s', generatedSourcesDir]
}

tasks.withType(JavaCompile).getByName("compileTestJava") {
    doFirst {
        generatedTestSourcesDir.mkdirs()
    }

    options.encoding = 'UTF-8'
    options.fork = true
    options.forkOptions.executable = 'javac'
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation" << "-XDignore.symbol.file"
    options.compilerArgs += ['-s', generatedTestSourcesDir]
}

dependencies {
    compileOnly group: 'com.google.dagger', name: 'dagger-compiler', version: '2.8'
    compile group: 'com.google.guava', name: 'guava', version: '21.0'
    compile sourceSets.annotationProcessors.output
    compile group: 'com.google.dagger', name: 'dagger', version: '2.8'
    compile group: 'org.jetbrains', name: 'annotations', version: '15.0'
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.2'
    compile group: 'commons-cli', name: 'commons-cli', version: '1.4'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.6'
    compile group: 'commons-io', name: 'commons-io', version: '2.6'
    compile group: 'org.xerial', name: 'sqlite-jdbc', version: '3.23.1'

    testCompile group: 'com.google.dagger', name: 'dagger', version: '2.8'
    testCompile group: 'com.google.dagger', name: 'dagger-compiler', version: '2.8'
    testCompile group: 'com.google.code.gson', name: 'gson', version: '2.8.2'
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.1.0'
    testCompile group: 'commons-codec', name: 'commons-codec', version: '1.11'
    testCompile group: 'commons-codec', name: 'commons-codec', version: '1.11'
    testCompile group: 'com.google.guava', name: 'guava', version: '21.0'

    testRuntime group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.1.0'
    testRuntime group: 'org.junit.platform', name: 'junit-platform-launcher', version: '1.1.0'
    testRuntime group: 'org.junit.platform', name: 'junit-platform-runner', version: '1.1.0'
}

jar {
    manifest {
        attributes 'Main-Class': 'br.com.alkord.utilitarioIntegracao.Main'
    }
}